"use strict";(self.webpackChunktotamjung=self.webpackChunktotamjung||[]).push([[2367],{"./src/components/common/Radio/Radio.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var _Checked$parameters,_Checked$parameters2,_Checked$parameters3,_NotChecked$parameter,_NotChecked$parameter2,_Disabled$parameters,_Disabled$parameters2;__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Disabled:()=>Disabled,NotChecked:()=>NotChecked,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"components/common/Radio",component:__webpack_require__("./src/components/common/Radio/Radio.tsx").A,argTypes:{checked:{description:"라디오의 체크 여부를 의미합니다."},onChange:{description:"라디오의 체크 여부가 달라지는 경우 실행하게 될 함수를 의미합니다."}},parameters:{docs:{description:{component:"`Radio`는 공용 라디오 컴포넌트입니다. 크기가 작기 때문에 단독으로 쓰이기보다는 다른 요소들과 같이 쓰입니다."}}}},Checked={args:{name:"optionName",value:"optionValue",checked:!0,onChange:value=>{alert(`onChange('${value}')`)}}},NotChecked={args:{name:"optionName",value:"optionValue",checked:!1,onChange:value=>{alert(`onChange('${value}')`)}}},Disabled={args:{name:"optionName",value:"optionValue",checked:!1,disabled:!0,onChange:value=>{alert(`onChange('${value}')`)}}};Checked.parameters={...Checked.parameters,docs:{...null===(_Checked$parameters=Checked.parameters)||void 0===_Checked$parameters?void 0:_Checked$parameters.docs,source:{originalSource:"{\n  args: {\n    name: 'optionName',\n    value: 'optionValue',\n    checked: true,\n    onChange: value => {\n      alert(`onChange('${value}')`);\n    }\n  }\n}",...null===(_Checked$parameters2=Checked.parameters)||void 0===_Checked$parameters2||null===(_Checked$parameters2=_Checked$parameters2.docs)||void 0===_Checked$parameters2?void 0:_Checked$parameters2.source},description:{story:"`Checkbox`와 달리, `Radio`의 경우 해당 컴포넌트가 이미 선택되어 있을 경우 클릭하더라도 `onChange` 이벤트가 트리거되지 않습니다. 따라서 이 경우 클릭해도 함수가 호출되지 않습니다.",...null===(_Checked$parameters3=Checked.parameters)||void 0===_Checked$parameters3||null===(_Checked$parameters3=_Checked$parameters3.docs)||void 0===_Checked$parameters3?void 0:_Checked$parameters3.description}}},NotChecked.parameters={...NotChecked.parameters,docs:{...null===(_NotChecked$parameter=NotChecked.parameters)||void 0===_NotChecked$parameter?void 0:_NotChecked$parameter.docs,source:{originalSource:"{\n  args: {\n    name: 'optionName',\n    value: 'optionValue',\n    checked: false,\n    onChange: value => {\n      alert(`onChange('${value}')`);\n    }\n  }\n}",...null===(_NotChecked$parameter2=NotChecked.parameters)||void 0===_NotChecked$parameter2||null===(_NotChecked$parameter2=_NotChecked$parameter2.docs)||void 0===_NotChecked$parameter2?void 0:_NotChecked$parameter2.source}}},Disabled.parameters={...Disabled.parameters,docs:{...null===(_Disabled$parameters=Disabled.parameters)||void 0===_Disabled$parameters?void 0:_Disabled$parameters.docs,source:{originalSource:"{\n  args: {\n    name: 'optionName',\n    value: 'optionValue',\n    checked: false,\n    disabled: true,\n    onChange: value => {\n      alert(`onChange('${value}')`);\n    }\n  }\n}",...null===(_Disabled$parameters2=Disabled.parameters)||void 0===_Disabled$parameters2||null===(_Disabled$parameters2=_Disabled$parameters2.docs)||void 0===_Disabled$parameters2?void 0:_Disabled$parameters2.source}}};const __namedExportsOrder=["Checked","NotChecked","Disabled"];try{Checked.displayName="Checked",Checked.__docgenInfo={description:"`Checkbox`와 달리, `Radio`의 경우 해당 컴포넌트가 이미 선택되어 있을 경우 클릭하더라도 `onChange` 이벤트가 트리거되지 않습니다. 따라서 이 경우 클릭해도 함수가 호출되지 않습니다.",displayName:"Checked",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/Radio/Radio.stories.tsx#Checked"]={docgenInfo:Checked.__docgenInfo,name:"Checked",path:"src/components/common/Radio/Radio.stories.tsx#Checked"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/Radio/Radio.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>common_Radio_Radio});var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const Label=styled_components_browser_esm.I4.label`
  width: 16px;
  height: 16px;
`,FakeVisualRadio=styled_components_browser_esm.I4.div`
  display: inline-block;
  flex-shrink: 0;
  position: relative;

  width: 16px;
  height: 16px;

  border: 3px solid ${({theme})=>theme.color.GOLD};

  border-radius: 8px;
  transition: 0.15s;
  cursor: ${({$disabled})=>$disabled?"not-allowed":"pointer"};

  ${({theme,$checked})=>$checked?styled_components_browser_esm.AH`
          box-shadow: 0 0 8px ${theme.color.GOLD};
          background-color: ${theme.color.GOLD};
        `:styled_components_browser_esm.AH`
          box-shadow: 0 0 8px ${theme.color.DARK_BROWN};
          background-color: transparent;
        `}
`,Radio=styled_components_browser_esm.I4.input.attrs({type:"radio"})`
  display: none;
`;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Radio_Radio=props=>{const{checked,disabled}=props;return(0,jsx_runtime.jsxs)(Label,{children:[(0,jsx_runtime.jsx)(Radio,{...props,onChange:()=>{"value"in props?props.onChange(props.value):props.onChange()}}),(0,jsx_runtime.jsx)(FakeVisualRadio,{$checked:checked,$disabled:disabled})]})};Radio_Radio.displayName="Radio";const common_Radio_Radio=Radio_Radio;try{Radio_Radio.displayName="Radio",Radio_Radio.__docgenInfo={description:"",displayName:"Radio",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},checked:{defaultValue:null,description:"",name:"checked",required:!0,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"((value: string) => void) | (() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/common/Radio/Radio.tsx#Radio"]={docgenInfo:Radio_Radio.__docgenInfo,name:"Radio",path:"src/components/common/Radio/Radio.tsx#Radio"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=components-common-Radio-Radio-stories.be374310.iframe.bundle.js.map