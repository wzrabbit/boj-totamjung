{"version":3,"file":"components-sections-HiderSection-HiderSection-stories.2dc73406.iframe.bundle.js","mappings":";;;;;;;;AAEA;;;;;;ACQA;;;;AAOA;;;;;;;;;;AAYA;;;;AAIA;;;AC/BA;;;;;;;ACOA;AAGA;;;;;;;AAOA;;AAEA;AAGA;;;;;;;;AAQA;;;AAGA;AAGA;;;;;;;AASA;;;;AAIA;;AAIA;;;;;;;;;;;AAWA;AAGA;;;;AAMA;;;;;;;;;AAWA;;;AAKA;;AAEA;;;;;AAKA;;AChGA;;;;;;ACQA;;;;;;;AAOA;;;;;;AAMA;AAGA;AACA;AACA;AAEA;;;AAKA;;;;;;;;;;;;;;ACtBA;AACA;AACA;;AAEA;AAEA;;;AAGA;;;;;;;AAOA;;;;AAMA;AACA;;;;;AAOA;AACA;AACA;;;AAKA;;;AAMA;AACA;;;;;;AAMA;;;;;;;;;;;;;;AC/CA;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;AAQA;AACA;;;;;;;;;;;;AAcA;;;;;;;AAOA;;AAEA;AAGA;;;;AAIA;;;;;AAOA;;;;;;;;;;;AAWA;;AAIA;;;AAGA;;AAEA;;AAIA;;;;;;;;;;AAUA;;AClHA;;AAEA;;ACEA;AACA;;AAEA;AAGA;;AAKA;AAEA;AAIA;;AAGA;AAIA;AACA;;;;;;;ACzBA;AAGA;AACA;;AAEA;AAEA;;;;;AAKA;;AAIA;;;;;AAOA;AACA;;;;;;;;;;ACxBA","sources":["webpack://totamjung/./src/components/AlgorithmPool/AlgorithmList/AlgorithmListItem/index.ts","webpack://totamjung/./src/components/AlgorithmPool/AlgorithmList/AlgorithmListItem/AlgorithmListItem.styled.ts","webpack://totamjung/./src/components/common/Checkbox/index.ts","webpack://totamjung/./src/components/AlgorithmPool/AlgorithmPool.styled.ts","webpack://totamjung/./src/components/AlgorithmPool/AlgorithmList/index.ts","webpack://totamjung/./src/components/common/Checkbox/Checkbox.styled.ts","webpack://totamjung/./src/components/common/IconButton/IconButton.styled.ts","webpack://totamjung/./src/components/common/Modal/Modal.styled.ts","webpack://totamjung/./src/components/common/SimpleModal/SimpleModal.styled.ts","webpack://totamjung/./src/components/common/Text/Text.styled.ts","webpack://totamjung/./src/components/common/TextLink/TextLink.styled.ts","webpack://totamjung/./src/components/sections/HiderSection/HiderSection.styled.ts"],"sourcesContent":["import AlgorithmListItem from './AlgorithmListItem';\n\nexport default AlgorithmListItem;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.li<{\n  $backgroundColor: 'brown' | 'light-brown';\n}>`\n  display: inline-flex;\n\n  height: 34px;\n\n  border-radius: 10px;\n  background-color: ${({ theme, $backgroundColor }) =>\n    $backgroundColor === 'brown' ? theme.color.BROWN : theme.color.LIGHT_BROWN};\n\n  cursor: pointer;\n  user-select: none;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  column-gap: 10px;\n\n  width: 100%;\n  height: 100%;\n  padding: 6px;\n\n  cursor: pointer;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Pretendard';\n  font-size: 16px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.color.LEMON};\n\n  cursor: pointer;\n`;\n","import Checkbox from './Checkbox';\n\nexport default Checkbox;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  flex-shrink: 0;\n\n  width: 700px;\n  height: 490px;\n\n  border-radius: 16px;\n  box-shadow: 0 0 8px ${({ theme }) => theme.color.GOLD};\n`;\n\nexport const AlgorithmPanel = styled.div`\n  position: relative;\n\n  width: 700px;\n  height: 440px;\n  padding: 14px;\n\n  border: 2px solid ${({ theme }) => theme.color.GOLD};\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const ControlPanel = styled.div`\n  display: flex;\n\n  width: 700px;\n  height: 100px;\n  margin-top: -50px;\n  padding: 54px 12px 6px 12px;\n\n  border: 2px solid ${({ theme }) => theme.color.GOLD};\n  border-radius: 16px;\n  border-top: none;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const SearchPanelContainer = styled.div`\n  display: flex;\n  column-gap: 6px;\n\n  width: 300px;\n  height: 100%;\n  margin-right: auto;\n`;\n\nexport const SearchIconWrapper = styled.div`\n  & svg {\n    height: 100%;\n\n    color: ${({ theme }) => theme.color.GOLD};\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  flex-grow: 1;\n\n  padding: 6px;\n\n  border: none;\n  background-color: transparent;\n\n  font-size: 16px;\n\n  color: ${({ theme }) => theme.color.WHITE};\n`;\n\nexport const CheckButtonPanel = styled.div`\n  display: flex;\n\n  user-select: none;\n`;\n\nexport const CheckButton = styled.button`\n  display: flex;\n  align-items: center;\n  column-gap: 6px;\n\n  width: 120px;\n  height: 100%;\n\n  background-color: transparent;\n`;\n\nexport const CheckButtonImage = styled.img`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const CheckButtonLabel = styled.p`\n  font-size: 16px;\n  color: ${({ theme }) => theme.color.GOLD};\n\n  transition: 0.2s;\n\n  button:hover > & {\n    text-shadow: 0 0 12px ${({ theme }) => theme.color.GOLD};\n  }\n`;\n","import AlgorithmList from './AlgorithmList';\n\nexport default AlgorithmList;\n","import { styled, css } from 'styled-components';\n\nexport const Container = styled.label`\n  display: inline-block;\n  position: relative;\n\n  width: 16px;\n  height: 16px;\n`;\n\nexport const FakeVisualCheckbox = styled.div<{ $isChecked: boolean }>`\n  display: inline-block;\n  position: relative;\n\n  width: 100%;\n  height: 100%;\n\n  border: 3px solid ${({ theme }) => theme.color.GOLD};\n\n  border-radius: 3px;\n  transition: 0.15s;\n  cursor: pointer;\n\n  ${({ theme, $isChecked }) =>\n    $isChecked\n      ? css`\n          box-shadow: 0 0 8px ${theme.color.GOLD};\n          background-color: ${theme.color.GOLD};\n        `\n      : css`\n          box-shadow: 0 0 8px ${theme.color.DARK_BROWN};\n          background-color: transparent;\n        `}\n`;\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  appearance: none;\n`;\n","import { styled } from 'styled-components';\n\nexport const Button = styled.button<{\n  $size: 'large' | 'medium';\n  $width?: string;\n  $color: string;\n}>`\n  display: flex;\n  overflow: hidden;\n  column-gap: 4px;\n  align-items: center;\n  justify-content: space-between;\n\n  width: ${({ $width }) => ($width ? $width : 'auto')};\n  height: ${({ $size }) => ($size === 'large' ? '40px' : '32px')};\n  padding: ${({ $size }) => ($size === 'large' ? '4px 6px' : '2px 4px')};\n\n  border: ${({ $size, $color }) =>\n    $size === 'large' ? `3px solid ${$color}` : `2px solid ${$color}`};\n  border-radius: ${({ $size }) => ($size === 'large' ? '6px' : '4px')};\n  background-color: transparent;\n\n  color: ${({ $color }) => $color};\n\n  &:disabled {\n    opacity: 0.6;\n  }\n\n  &:not([disabled]):hover {\n    box-shadow: 0 0 10px ${({ $color }) => $color};\n  }\n\n  transition: 0.2s;\n`;\n\nexport const Text = styled.span<{ $size: 'large' | 'medium'; $color: string }>`\n  font-size: ${({ $size }) => ($size === 'large' ? '20px' : '16px')};\n  font-weight: 600;\n  text-align: center;\n  flex-grow: 1;\n  white-space: nowrap;\n`;\n\nexport const IconImage = styled.img<{ $size: 'large' | 'medium' }>`\n  width: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n  height: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n\n  object-fit: contain;\n`;\n\nexport const IconWrapper = styled.div<{\n  $size: 'large' | 'medium';\n  $color: string;\n}>`\n  flex-shrink: 0;\n\n  width: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n  height: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n\n  & > svg {\n    width: 100%;\n    height: 100%;\n\n    color: ${({ $color }) => $color};\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  z-index: 1;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  backdrop-filter: blur(5px);\n  animation: fadeIn 0.2s forwards;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  max-width: 100%;\n  max-height: 100%;\n\n  box-shadow: 0 0 30px ${({ theme }) => theme.color.GOLD};\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  animation: zoomIn 0.2s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n\n  @keyframes zoomIn {\n    from {\n      transform: scale(0.7);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 12px;\n\n  height: 56px;\n  padding: 16px 16px 0 16px;\n  border-bottom: 16px solid ${({ theme }) => theme.color.DARK_BROWN};\n\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const Title = styled.p`\n  overflow: hidden;\n  flex-grow: 1;\n\n  color: ${({ theme }) => theme.color.GOLD};\n  font-size: 24px;\n  font-family: 'Do Hyeon', Pretendard;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const CloseButton = styled.button`\n  flex-shrink: 0;\n\n  width: 28px;\n  height: 28px;\n\n  background-color: transparent;\n\n  & > svg {\n    width: 100%;\n    height: 100%;\n    color: ${({ theme }) => theme.color.GOLD};\n  }\n`;\n\nexport const Body = styled.div`\n  padding: 16px;\n\n  background-color: ${({ theme }) => theme.color.BROWN};\n\n  color: ${({ theme }) => theme.color.WHITE};\n  font-size: 16px;\n`;\n\nexport const ModalActionButtonsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  column-gap: 6px;\n  overflow: hidden;\n\n  width: calc(100% + 32px);\n  padding: 16px;\n  margin: 16px -16px -16px -16px;\n\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n","import { styled } from 'styled-components';\n\nexport const ContentContainer = styled.div<{ $width: string; $height: string }>`\n  width: ${({ $width }) => $width};\n  max-width: 100%;\n  min-height: ${({ $height }) => $height};\n`;\n","import { styled, css } from 'styled-components';\n\nexport const Text = styled.p<{\n  $type: 'primary' | 'semiPrimary' | 'normal' | 'code';\n  $fontSize: '16px' | '14px' | '13px';\n  $textAlign: 'left' | 'center' | 'right';\n}>`\n  text-align: ${({ $textAlign }) => $textAlign};\n  font-size: ${({ $fontSize }) => $fontSize};\n\n  ${({ theme, $type }) => {\n    if ($type === 'primary') {\n      return css`\n        color: ${theme.color.GOLD};\n        font-weight: 600;\n      `;\n    }\n\n    if ($type === 'semiPrimary') {\n      return css`\n        color: ${theme.color.LEMON};\n      `;\n    }\n\n    if ($type === 'code') {\n      return css`\n        font-family: 'IBM Plex Mono', Consolas, Pretendard;\n        color: ${theme.color.WHITE};\n      `;\n    }\n\n    return css`\n      color: ${theme.color.WHITE};\n    `;\n  }}\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.a`\n  display: inline-flex;\n  align-items: center;\n  column-gap: 2px;\n\n  color: ${({ theme }) => theme.color.LEMON};\n`;\n\nexport const TextLink = styled.span<{ $fontSize: '16px' | '14px' | '13px' }>`\n  font-size: ${({ $fontSize }) => $fontSize};\n  text-decoration: underline 2px dotted;\n  -webkit-text-decoration-color: ${({ theme }) =>\n    theme.color.TRANSPARENT_LEMON};\n  text-decoration-color: ${({ theme }) => theme.color.TRANSPARENT_LEMON};\n  text-underline-offset: 2px;\n\n  &:hover {\n    text-decoration: underline 2px dotted;\n    text-decoration-color: ${({ theme }) => theme.color.LEMON};\n  }\n`;\n\nexport const LinkIconWrapper = styled.span<{\n  $fontSize: '16px' | '14px' | '13px';\n}>`\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n\n  width: ${({ $fontSize }) => $fontSize};\n  height: ${({ $fontSize }) => $fontSize};\n\n  & > svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  column-gap: 20px;\n  flex-shrink: 0;\n`;\n\nexport const AlgorithmHiderMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 6px;\n`;\n"],"names":[],"sourceRoot":""}