{"version":3,"file":"components-core-Options-Options-stories.e29bffdd.iframe.bundle.js","mappings":";;;;;;;;;;;;AAgBA;;;;;;AAQA;;;;AAMA;;;;;;AAQA;;;;;AAOA;;;;;AAKA;;;;;;;;;AChDA;;;;;;ACQA;;;;AAOA;;;;;;;;;;AAYA;;;;AAIA;;;AC/BA;;;;;;;ACOA;AAGA;;;;;;;AAOA;;AAEA;AAGA;;;;;;;;AAQA;;;AAGA;AAGA;;;;;;;AASA;;;;AAIA;;AAIA;;;;;;;;;;;AAWA;AAGA;;;;AAMA;;;;;;;;;AAWA;;;AAKA;;AAEA;;;;;AAKA;;AChGA;;;;;;;;;ACWA;AACA;AACA;AACA;;;;;;;;;;;;;ACAA;;;AAKA;;AAIA;;;;;;;;AAUA;;;;;;AAMA;AAGA;;;;;AAOA;;;;;;;;;;;;;AC3CA;;;;;;;AASA;;;AAKA;;;AAGA;;;;;AAKA;AACA;;;;;AAKA;;AAIA;;;AAGA;;;AAGA;;;;;AAKA;;;;;;;;;;;;ACrCA;;;;;;;;;;;;AAcA;;;;;;;;AAQA;;;AAKA;;;;;AAOA;;AAIA;;;AAGA;AAGA;;;;AAMA;;;AAGA;AAGA;;;;;;;AAOA;;AAEA;AAGA;;;;;;AAQA;AACA;AAGA;;;;;;;;;AC9CA;AAGA;AAIA;AAEA;AAGA;AAIA;AAEA;AAGA;AAIA;AAEA;AAGA;AAIA;AAEA;AAGA;AAIA;AAEA;AAGA;AAIA;AAEA;AAGA;AAIA;AACA;AAGA;AAIA;;;;;;;;;;;;;;AAiBA;;;AAIA;;AAKA;;;AAKA;;;;;;;AAUA;;AAKA;;;;AAMA;;;;;;;AASA;;;;;;;AAUA;;;AAMA;;;;;;AAQA;;;;;;;;AAWA;AAIA;;;;;;;;;AASA;;AAIA;;;;;;;;AAQA;;;;;;;;;;AC5OA;;;;;;;;ACUA;;;;;AAKA;;AAIA;;;;;;;AASA;;;;;;;;AAUA;;;;AAIA;;;;;;;AAOA;;;;AAIA;;;;;;;AASA;;;AAGA;;AAIA;;;;;;;;AAUA;;;AAGA;;;AAKA;;;;;;;;AAQA;;AC/FA;;;;;;ACQA;;;;;;;AAOA;;;;;;AAMA;AAGA;AACA;AACA;AAEA;;;AAKA;;;;;;;;;;;AC7BA;AACA;;;AAGA;;AAIA;;;;;;;AAYA;;;;;;;;AAQA;;AAGA;;;AAMA;;;;AAOA;AACA;;;AAGA;;;;AAIA;;AAKA;;AAGA;;;;;;;;;ACxDA;;;;ACRA;;;;ACMA;;;;;;;;;;;ACGA;;;AAKA","sources":["webpack://totamjung/./src/components/core/Options/Options.styled.ts","webpack://totamjung/./src/components/AlgorithmPool/AlgorithmList/AlgorithmListItem/index.ts","webpack://totamjung/./src/components/AlgorithmPool/AlgorithmList/AlgorithmListItem/AlgorithmListItem.styled.ts","webpack://totamjung/./src/components/common/Checkbox/index.ts","webpack://totamjung/./src/components/AlgorithmPool/AlgorithmPool.styled.ts","webpack://totamjung/./src/components/AlgorithmPool/AlgorithmList/index.ts","webpack://totamjung/./src/components/AppearanceFieldsetMenu/AppearanceFieldsetMenu.styled.ts","webpack://totamjung/./src/components/OptionsHeader/OptionsHeader.styled.ts","webpack://totamjung/./src/components/OptionsHeader/OptionsNav/OptionsNav.styled.ts","webpack://totamjung/./src/components/OptionsHeader/TotamjungInfoModal/TotamjungInfoModal.styled.ts","webpack://totamjung/./src/components/RandomDefenseHistoryMenu/RandomDefenseHistoryList/RandomDefenseHistoryItem/RandomDefenseHistoryItem.styled.ts","webpack://totamjung/./src/components/RandomDefenseHistoryMenu/RandomDefenseHistoryList/RandomDefenseHistoryItem/index.ts","webpack://totamjung/./src/components/RandomDefenseHistoryMenu/RandomDefenseHistoryMenu.styled.ts","webpack://totamjung/./src/components/common/Switch/index.ts","webpack://totamjung/./src/components/common/Checkbox/Checkbox.styled.ts","webpack://totamjung/./src/components/common/Switch/Switch.styled.ts","webpack://totamjung/./src/components/sections/AppearanceAndDataManageSection/AppearanceAndDataManageSection.styled.ts","webpack://totamjung/./src/components/AppearanceFieldsetMenu/index.ts","webpack://totamjung/./src/components/sections/HiderSection/HiderSection.styled.ts","webpack://totamjung/./src/components/sections/RandomDefenseSection/RandomDefenseSection.styled.ts"],"sourcesContent":["import { styled, keyframes } from 'styled-components';\n\nconst breathe = keyframes`\n  0% {\n    transform: scaleY(100%);\n  }\n\n  50% {\n    transform: scaleY(97%);\n  }\n\n  100% {\n    transform: scaleY(100%);\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n\n  width: 1310px;\n  height: 665px;\n  margin: 10px 0 0 20px;\n`;\n\nexport const OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n`;\n\nexport const OptionsBody = styled.main`\n  display: flex;\n  column-gap: 20px;\n\n  width: 1060px;\n  height: 580px;\n`;\n\nexport const TotamjungImageWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n\n  width: 250px;\n`;\n\nexport const TotamjungImage = styled.img`\n  width: 250px;\n  height: 331px;\n\n  transform-origin: bottom;\n  animation: ${breathe} 3s forwards infinite;\n`;\n","import AlgorithmListItem from './AlgorithmListItem';\n\nexport default AlgorithmListItem;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.li<{\n  $backgroundColor: 'brown' | 'light-brown';\n}>`\n  display: inline-flex;\n\n  height: 34px;\n\n  border-radius: 10px;\n  background-color: ${({ theme, $backgroundColor }) =>\n    $backgroundColor === 'brown' ? theme.color.BROWN : theme.color.LIGHT_BROWN};\n\n  cursor: pointer;\n  user-select: none;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  column-gap: 10px;\n\n  width: 100%;\n  height: 100%;\n  padding: 6px;\n\n  cursor: pointer;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Pretendard';\n  font-size: 16px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.color.LEMON};\n\n  cursor: pointer;\n`;\n","import Checkbox from './Checkbox';\n\nexport default Checkbox;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  flex-shrink: 0;\n\n  width: 700px;\n  height: 490px;\n\n  border-radius: 16px;\n  box-shadow: 0 0 8px ${({ theme }) => theme.color.GOLD};\n`;\n\nexport const AlgorithmPanel = styled.div`\n  position: relative;\n\n  width: 700px;\n  height: 440px;\n  padding: 14px;\n\n  border: 2px solid ${({ theme }) => theme.color.GOLD};\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const ControlPanel = styled.div`\n  display: flex;\n\n  width: 700px;\n  height: 100px;\n  margin-top: -50px;\n  padding: 54px 12px 6px 12px;\n\n  border: 2px solid ${({ theme }) => theme.color.GOLD};\n  border-radius: 16px;\n  border-top: none;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const SearchPanelContainer = styled.div`\n  display: flex;\n  column-gap: 6px;\n\n  width: 300px;\n  height: 100%;\n  margin-right: auto;\n`;\n\nexport const SearchIconWrapper = styled.div`\n  & svg {\n    height: 100%;\n\n    color: ${({ theme }) => theme.color.GOLD};\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  flex-grow: 1;\n\n  padding: 6px;\n\n  border: none;\n  background-color: transparent;\n\n  font-size: 16px;\n\n  color: ${({ theme }) => theme.color.WHITE};\n`;\n\nexport const CheckButtonPanel = styled.div`\n  display: flex;\n\n  user-select: none;\n`;\n\nexport const CheckButton = styled.button`\n  display: flex;\n  align-items: center;\n  column-gap: 6px;\n\n  width: 120px;\n  height: 100%;\n\n  background-color: transparent;\n`;\n\nexport const CheckButtonImage = styled.img`\n  width: 30px;\n  height: 30px;\n`;\n\nexport const CheckButtonLabel = styled.p`\n  font-size: 16px;\n  color: ${({ theme }) => theme.color.GOLD};\n\n  transition: 0.2s;\n\n  button:hover > & {\n    text-shadow: 0 0 12px ${({ theme }) => theme.color.GOLD};\n  }\n`;\n","import AlgorithmList from './AlgorithmList';\n\nexport default AlgorithmList;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  row-gap: 14px;\n  position: relative;\n\n  width: 340px;\n  height: auto;\n`;\n\nexport const FontText = styled.p<{ $fontFamily: string; $fontSize: string }>`\n  color: ${({ theme }) => theme.color.LEMON};\n  font-size: ${({ $fontSize }) => $fontSize ?? '16px'};\n  font-family: ${({ $fontFamily }) => $fontFamily};\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: flex-end;\n  column-gap: 20px;\n\n  height: 75px;\n\n  user-select: none;\n\n  & > * {\n    flex-shrink: 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  width: 130px;\n  height: 100%;\n`;\n\nexport const OptionsLogoImage = styled.img`\n  width: 100%;\n`;\n\nexport const ButtonPanel = styled.div`\n  display: flex;\n  align-items: flex-end;\n  column-gap: 6px;\n\n  height: 50px;\n\n  margin-left: auto;\n`;\n\nexport const VersionText = styled.span`\n  margin-bottom: 10px;\n  margin-left: auto;\n\n  font-size: 18px;\n  font-family: 'Jua';\n  color: ${({ theme }) => theme.color.GOLD};\n`;\n\nexport const Button = styled.button`\n  width: 51.5px;\n  height: 50px;\n\n  background: none;\n`;\n\nexport const ButtonImage = styled.img`\n  width: 100%;\n  height: 100%;\n\n  transition: 0.2s;\n\n  &:hover {\n    filter: brightness(140%);\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.nav`\n  display: inline-flex;\n\n  height: 36px;\n`;\n\nexport const NavItemList = styled.ul`\n  display: flex;\n  column-gap: 40px;\n  flex-shrink: 0;\n\n  width: auto;\n  height: 100%;\n`;\n\nexport const NavItem = styled.li`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CategoryButton = styled.button<{ $isSelected: boolean }>`\n  padding: 2px;\n\n  border-bottom: 0px solid ${({ theme }) => theme.color.GOLD};\n  background: none;\n\n  font-family: Pretendard;\n  font-size: 20px;\n  font-weight: ${({ $isSelected }) => ($isSelected ? 800 : 600)};\n  color: ${({ theme }) => theme.color.GOLD};\n\n  transition: 0.25s;\n\n  &:hover {\n    color: ${({ theme }) => theme.color.LEMON};\n  }\n`;\n\nexport const Underline = styled.span<{ $isSelected: boolean }>`\n  display: inline-block;\n\n  width: ${({ $isSelected }) => ($isSelected ? '100%' : '0')};\n  height: 2px;\n\n  background-color: ${({ theme }) => theme.color.GOLD};\n\n  transition: 0.25s;\n\n  button:hover + & {\n    background-color: ${({ theme }) => theme.color.LEMON};\n  }\n`;\n","import { styled, keyframes } from 'styled-components';\n\nconst blink = keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 13px;\n\n  width: 310px;\n  max-width: 100%;\n  height: 420px;\n\n  & > * {\n    z-index: 1;\n  }\n`;\n\nexport const DarkBrownGradientElement = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 200px;\n\n  background: ${({ theme }) => theme.gradient.BROWN_GRADIENT};\n\n  z-index: 0;\n`;\n\nexport const IntroductoryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 8px;\n`;\n\nexport const LogoSquareImage = styled.img`\n  width: 160px;\n`;\n\nexport const ContentTitle = styled.span`\n  font-size: 30px;\n  font-family: 'Do Hyeon';\n  color: ${({ theme }) => theme.color.GOLD};\n`;\n\nexport const IntroductoryTextContainer = styled.div`\n  position: relative;\n\n  text-align: center;\n`;\n\nexport const TypewriterText = styled.span`\n  margin: 0 2px;\n\n  color: ${({ theme }) => theme.color.LEMON};\n`;\n\nexport const Pointer = styled.span`\n  display: inline-block;\n\n  width: 1.5px;\n  height: 18px;\n  margin: -3px 0 -3px 1px;\n\n  background-color: ${({ theme }) => theme.color.LEMON};\n\n  animation: ${blink} 0.8s infinite forwards;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 4px;\n\n  margin-top: auto;\n`;\n\nexport const LightGrayText = styled.span`\n  color: ${({ theme }) => theme.color.LIGHT_GRAY};\n`;\n\nexport const ControlButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 8px;\n\n  width: 220px;\n  margin: 0 auto;\n`;\n","import { styled, css } from 'styled-components';\nimport { solvedAcNumericTierIcons } from '~images/svg/tier';\nimport type { DefaultTheme } from 'styled-components/dist/types';\n\nconst getTierColor = (\n  tier: keyof typeof solvedAcNumericTierIcons,\n  isHidden: boolean,\n  theme: DefaultTheme,\n) => {\n  if (isHidden) {\n    return theme.color.GRAY;\n  }\n\n  if (tier >= 1 && tier <= 5) {\n    return theme.solvedAcTier[5];\n  }\n\n  if (tier >= 6 && tier <= 10) {\n    return theme.solvedAcTier[10];\n  }\n\n  if (tier >= 11 && tier <= 15) {\n    return theme.solvedAcTier[15];\n  }\n\n  if (tier >= 16 && tier <= 20) {\n    return theme.solvedAcTier[20];\n  }\n\n  if (tier >= 21 && tier <= 25) {\n    return theme.solvedAcTier[25];\n  }\n\n  if (tier >= 26 && tier <= 30) {\n    return theme.solvedAcTier[30];\n  }\n\n  return theme.color.WHITE;\n};\n\nconst getTierGradientCss = (\n  tier: keyof typeof solvedAcNumericTierIcons,\n  isHidden: boolean,\n  isHover: boolean,\n  theme: DefaultTheme,\n) => {\n  if (isHidden) {\n    return css`\n      background-image: ${isHover\n          ? theme.solvedAcTier.HIDDEN_DARK_GRADIENT200\n          : theme.solvedAcTier.HIDDEN_DARK_GRADIENT100},\n        ${theme.solvedAcTier.HIDDEN_GRADIENT};\n    `;\n  }\n\n  if (tier >= 1 && tier <= 5) {\n    return css`\n      background-image: ${isHover\n          ? theme.solvedAcTier.BRONZE_DARK_GRADIENT200\n          : theme.solvedAcTier.BRONZE_DARK_GRADIENT100},\n        ${theme.solvedAcTier.BRONZE_GRADIENT};\n    `;\n  }\n\n  if (tier >= 6 && tier <= 10) {\n    return css`\n      background-image: ${isHover\n          ? theme.solvedAcTier.SILVER_DARK_GRADIENT200\n          : theme.solvedAcTier.SILVER_DARK_GRADIENT100},\n        ${theme.solvedAcTier.SILVER_GRADIENT};\n    `;\n  }\n\n  if (tier >= 11 && tier <= 15) {\n    return css`\n      background-image: ${isHover\n          ? theme.solvedAcTier.GOLD_DARK_GRADIENT200\n          : theme.solvedAcTier.GOLD_DARK_GRADIENT100},\n        ${theme.solvedAcTier.GOLD_GRADIENT};\n    `;\n  }\n\n  if (tier >= 16 && tier <= 20) {\n    return css`\n      background-image: ${isHover\n          ? theme.solvedAcTier.PLATINUM_DARK_GRADIENT200\n          : theme.solvedAcTier.PLATINUM_DARK_GRADIENT100},\n        ${theme.solvedAcTier.PLATINUM_GRADIENT};\n    `;\n  }\n\n  if (tier >= 21 && tier <= 25) {\n    return css`\n      background-image: ${isHover\n          ? theme.solvedAcTier.DIAMOND_DARK_GRADIENT200\n          : theme.solvedAcTier.DIAMOND_DARK_GRADIENT100},\n        ${theme.solvedAcTier.DIAMOND_GRADIENT};\n    `;\n  }\n\n  if (tier >= 26 && tier <= 30) {\n    return css`\n      background-image: ${isHover\n          ? theme.solvedAcTier.RUBY_DARK_GRADIENT200\n          : theme.solvedAcTier.RUBY_DARK_GRADIENT100},\n        ${theme.solvedAcTier.RUBY_GRADIENT};\n    `;\n  }\n\n  return css`\n    background-image: ${isHover\n        ? theme.solvedAcTier.UNRATED_DARK_GRADIENT200\n        : theme.solvedAcTier.UNRATED_DARK_GRADIENT100},\n      ${theme.solvedAcTier.UNRATED_GRADIENT};\n  `;\n};\n\nexport const Container = styled.li<{\n  $tier: keyof typeof solvedAcNumericTierIcons;\n  $isHidden: boolean;\n}>`\n  display: flex;\n  align-items: center;\n\n  width: 312px;\n  height: 54px;\n\n  border: 2px solid transparent;\n  border-radius: 4px;\n  background-origin: border-box;\n  background-clip: content-box, border-box;\n\n  user-select: none;\n\n  ${({ $tier, $isHidden, theme }) =>\n    getTierGradientCss($tier, $isHidden, false, theme)};\n\n  &:hover {\n    ${({ $tier, $isHidden, theme }) =>\n      getTierGradientCss($tier, $isHidden, true, theme)};\n  }\n`;\n\nexport const LinkButton = styled.a`\n  display: flex;\n  align-items: center;\n`;\n\nexport const DeleteButton = styled.button<{\n  $tier: keyof typeof solvedAcNumericTierIcons;\n  $isHidden: boolean;\n}>`\n  width: 32px;\n  height: 100%;\n\n  background-color: transparent;\n\n  svg {\n    color: ${({ $tier, $isHidden, theme }) =>\n      getTierColor($tier, $isHidden, theme)};\n  }\n`;\n\nexport const TierBadge = styled.img`\n  width: 50px;\n  height: 50px;\n  padding: 6px;\n`;\n\nexport const InformationContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  row-gap: 4px;\n\n  width: 226px;\n`;\n\nexport const Title = styled.p<{\n  $tier: keyof typeof solvedAcNumericTierIcons;\n  $isHidden: boolean;\n}>`\n  overflow: hidden;\n  display: inline;\n\n  font-size: 17px;\n  line-height: 17px;\n  font-weight: 600;\n  color: ${({ $tier, $isHidden, theme }) =>\n    getTierColor($tier, $isHidden, theme)};\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  height: 16px;\n`;\n\nexport const ProblemId = styled.p<{\n  $tier: keyof typeof solvedAcNumericTierIcons;\n  $isHidden: boolean;\n}>`\n  display: inline-block;\n\n  height: 12px;\n\n  font-size: 12px;\n  font-weight: 500;\n  font-family: 'Oxanium', 'Pretendard';\n  color: ${({ $tier, $isHidden, theme }) =>\n    getTierColor($tier, $isHidden, theme)};\n`;\n\nexport const CreatedAtContainer = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 2px;\n\n  svg {\n    width: 16px;\n    height: 16px;\n\n    color: ${({ theme }) => theme.color.WHITE};\n  }\n`;\n\nexport const CreatedAt = styled.p`\n  display: inline-block;\n\n  height: 12px;\n\n  font-size: 12px;\n  font-weight: 500;\n  font-family: 'Oxanium', 'Pretendard';\n  color: ${({ theme }) => theme.color.WHITE};\n`;\n","import RandomDefenseHistoryItem from './RandomDefenseHistoryItem';\n\nexport default RandomDefenseHistoryItem;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  row-gap: 10px;\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const HistoryListContainer = styled.div`\n  width: 348px;\n  height: 414px;\n  padding: 8px;\n\n  border: 1px solid ${({ theme }) => theme.color.LIGHT_BROWN};\n  border-radius: 6px;\n`;\n\nexport const TierSwitchPanel = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 10px;\n\n  margin-top: 8px;\n  height: 30px;\n`;\n\nexport const HistoryManagePanel = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 10px;\n\n  height: 36px;\n\n  margin-right: 26px;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 36px;\n  height: 36px;\n\n  border: 1px solid ${({ theme }) => theme.color.RED};\n  border-radius: 4px;\n  background: none;\n\n  transition: 0.2s;\n\n  svg {\n    color: ${({ theme }) => theme.color.RED};\n  }\n\n  &:hover {\n    box-shadow: 0 0 8px ${({ theme }) => theme.color.RED};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    box-shadow: none;\n  }\n`;\n\nexport const Text = styled.p`\n  display: inline-block;\n\n  color: ${({ theme }) => theme.color.WHITE};\n  font-size: 16px;\n`;\n\nexport const Indicator = styled.div`\n  display: flex;\n  column-gap: 4px;\n\n  width: 80px;\n  height: 20px;\n  margin-bottom: 16px;\n  margin-right: auto;\n`;\n\nexport const IndicatorText = styled.p`\n  display: inline-block;\n\n  color: ${({ theme }) => theme.color.WHITE};\n  font-size: 14px;\n  line-height: 20px;\n`;\n\nexport const PackageIconWrapper = styled.div`\n  width: 20px;\n  height: 20px;\n\n  svg {\n    width: 20px;\n    height: 20px;\n\n    color: ${({ theme }) => theme.color.GOLD};\n  }\n`;\n","import Switch from './Switch';\n\nexport default Switch;\n","import { styled, css } from 'styled-components';\n\nexport const Container = styled.label`\n  display: inline-block;\n  position: relative;\n\n  width: 16px;\n  height: 16px;\n`;\n\nexport const FakeVisualCheckbox = styled.div<{ $isChecked: boolean }>`\n  display: inline-block;\n  position: relative;\n\n  width: 100%;\n  height: 100%;\n\n  border: 3px solid ${({ theme }) => theme.color.GOLD};\n\n  border-radius: 3px;\n  transition: 0.15s;\n  cursor: pointer;\n\n  ${({ theme, $isChecked }) =>\n    $isChecked\n      ? css`\n          box-shadow: 0 0 8px ${theme.color.GOLD};\n          background-color: ${theme.color.GOLD};\n        `\n      : css`\n          box-shadow: 0 0 8px ${theme.color.DARK_BROWN};\n          background-color: transparent;\n        `}\n`;\n\nexport const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  appearance: none;\n`;\n","import { styled, css } from 'styled-components';\n\nexport const Container = styled.label<{ $size: 'large' | 'medium' }>`\n  display: inline-block;\n  position: relative;\n\n  width: ${({ $size }) => ($size === 'large' ? '50px' : '40px')};\n  height: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n\n  & * {\n    border-radius: ${({ $size }) => ($size === 'large' ? '15px' : '12px')};\n  }\n`;\n\nexport const Switch = styled.input.attrs({\n  type: 'checkbox',\n  role: 'switch',\n})`\n  position: relative;\n\n  width: 100%;\n  height: 100%;\n\n  appearance: none;\n`;\n\nexport const FakeVisualSwitch = styled.div<{ $isChecked: boolean }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: ${({ theme, $isChecked }) =>\n    $isChecked ? theme.color.GOLD : theme.color.LIGHTER_BROWN};\n\n  box-shadow: ${({ theme, $isChecked }) =>\n    $isChecked ? `0 0 12px ${theme.color.GOLD}` : `0 0 12px transparent`};\n  cursor: pointer;\n  transition: 0.4s;\n`;\n\nexport const Handle = styled.div<{\n  $size: 'large' | 'medium';\n  $isChecked: boolean;\n}>`\n  display: inline-block;\n  position: absolute;\n\n  width: ${({ $size }) => ($size === 'large' ? '26px' : '20px')};\n  height: ${({ $size }) => ($size === 'large' ? '26px' : '20px')};\n  margin: 2px;\n\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  transition: transform 0.2s;\n\n  ${({ $size, $isChecked }) =>\n    $isChecked\n      ? $size === 'large'\n        ? css`\n            transform: translateX(20px);\n          `\n        : css`\n            transform: translateX(16px);\n          `\n      : css`\n          transform: translateX(0);\n        `}\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  column-gap: 20px;\n  flex-shrink: 0;\n\n  width: 100%;\n`;\n\nexport const AlgorithmHiderMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 6px;\n`;\n","import AppearanceFieldsetMenu from './AppearanceFieldsetMenu';\n\nexport default AppearanceFieldsetMenu;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  column-gap: 20px;\n  flex-shrink: 0;\n`;\n\nexport const AlgorithmHiderMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 6px;\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  row-gap: 6px;\n\n  width: 100%;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  column-gap: 12px;\n`;\n\nexport const RandomDefenseManageMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n\n  width: 650px;\n  height: auto;\n`;\n"],"names":[],"sourceRoot":""}