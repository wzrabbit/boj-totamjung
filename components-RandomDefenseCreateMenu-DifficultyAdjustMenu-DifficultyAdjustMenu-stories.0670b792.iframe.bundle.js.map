{"version":3,"file":"components-RandomDefenseCreateMenu-DifficultyAdjustMenu-DifficultyAdjustMenu-stories.0670b792.iframe.bundle.js","mappings":";;;;;;AAUA;;;ACRA;;;ACmCA;;;;;;;;AAQA;;;;;;;;AAQA;;AAQA;;AAIA;;;;AAIA;;;;;;;;ACnEA;;;;;;;;ACQA;AACA;;;;;AAOA;;AAIA;;;;AAIA;;;;;;;;;ACXA;;;;AAIA;;;AAiBA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA","sources":["webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/DifficultyAdjustMenu.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierSlider/index.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierPresetButtonList/TierPresetButton/TierPresetButton.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierPresetButtonList/TierPresetButton/index.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierRange/TierRange.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierSlider/TierSlider.styled.ts"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n\n  width: 465px;\n`;\n\nexport const PresetPanel = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n","import TierSlider from './TierSlider';\n\nexport default TierSlider;\n","import { styled } from 'styled-components';\nimport { Theme } from '~styles/theme';\nimport type { Rank } from '~types/randomDefense';\n\nconst getRankColor = (theme: Theme, rank: Rank) => {\n  if (rank === 'bronze') {\n    return theme.solvedAcTier.BRONZE;\n  }\n\n  if (rank === 'silver') {\n    return theme.solvedAcTier.SILVER;\n  }\n\n  if (rank === 'gold') {\n    return theme.solvedAcTier.GOLD;\n  }\n\n  if (rank === 'platinum') {\n    return theme.solvedAcTier.PLATINUM;\n  }\n\n  if (rank === 'diamond') {\n    return theme.solvedAcTier.DIAMOND;\n  }\n\n  if (rank === 'ruby') {\n    return theme.solvedAcTier.RUBY;\n  }\n\n  return theme.color.GRAY;\n};\n\nexport const Container = styled.li`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const Button = styled.button<{ $rank: Rank }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n\n  border: 1.5px solid ${({ theme, $rank }) => getRankColor(theme, $rank)};\n  border-radius: 4px;\n\n  background: transparent;\n\n  user-select: none;\n\n  &:hover {\n    background: ${({ theme, $rank }) =>\n      `linear-gradient(to top, ${getRankColor(\n        theme,\n        $rank,\n      )}70 0%, transparent 100%)`};\n  }\n`;\n\nexport const TierBadge = styled.img`\n  width: 16px;\n`;\n\nexport const Tilde = styled.div`\n  width: 16px;\n\n  font-size: 24px;\n  color: ${({ theme }) => theme.color.GOLD};\n  font-weight: 800;\n`;\n","import TierPresetButton from './TierPresetButton';\n\nexport default TierPresetButton;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  width: 120px;\n  height: 50px;\n\n  border: 1.5px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  background-color: ${({ theme }) => theme.color.BROWN};\n\n  border-radius: 6px;\n\n  user-select: none;\n`;\n\nexport const TierBadge = styled.img`\n  width: 26px;\n`;\n\nexport const Tilde = styled.div`\n  width: 16px;\n\n  font-size: 24px;\n  color: ${({ theme }) => theme.color.GOLD};\n  font-weight: 800;\n`;\n","import { styled } from 'styled-components';\nimport { TierWithoutNotRatable } from '~types/randomDefense';\nimport { isTierWithoutNotRatable } from '~types/typeGuards';\n\nconst TIER_COUNT = 31;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  width: 465px;\n  height: 15px;\n`;\n\nexport const Track = styled.div`\n  width: 100%;\n  height: 3px;\n\n  background: ${({ theme }) =>\n    `linear-gradient(to right, ${Array.from({ length: TIER_COUNT })\n      .map((_, index) => {\n        if (!isTierWithoutNotRatable(index)) {\n          return '';\n        }\n\n        return `${theme.solvedAcTier[index]} ${(index / TIER_COUNT) * 100}%, ${\n          theme.solvedAcTier[index]\n        } ${((index + 1) / TIER_COUNT) * 100}%, `;\n      })\n      .join('')\n      .slice(0, -2)})`};\n\n  pointer-events: none;\n`;\n\nexport const Thumb = styled.input<{ value: TierWithoutNotRatable }>`\n  position: absolute;\n  -webkit-appearance: none;\n  appearance: none;\n\n  width: 100%;\n  background-color: transparent;\n\n  pointer-events: none;\n\n  &::-webkit-slider-runnable-track {\n    -webkit-appearance: none;\n    appearance: none;\n  }\n\n  &::-webkit-slider-thumb {\n    height: 15px;\n    width: 15px;\n\n    border-radius: 7.5px;\n    background-color: ${({ theme, value }) => theme.solvedAcTier[value]};\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.color.TRANSPARENT_FAINT_WHITE}\n      inset;\n\n    -webkit-appearance: none;\n    appearance: none;\n\n    pointer-events: auto;\n  }\n\n  cursor: pointer;\n`;\n"],"names":[],"sourceRoot":""}