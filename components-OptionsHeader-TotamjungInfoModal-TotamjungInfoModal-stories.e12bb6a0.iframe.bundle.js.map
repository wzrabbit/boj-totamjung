{"version":3,"file":"components-OptionsHeader-TotamjungInfoModal-TotamjungInfoModal-stories.e12bb6a0.iframe.bundle.js","mappings":";;;;;;;;;;AAcA;;;;;;;;;;;;AAcA;;;;;;;;AAQA;;;AAKA;;;;;AAOA;;AAIA;;;AAGA;AAGA;;;;AAMA;;;AAGA;AAGA;;;;;;;AAOA;;AAEA;AAGA;;;;;;AAQA;AACA;AAGA;;;;;;;;;;;;;;;ACjFA;AACA;AACA;;AAEA;AAEA;;;AAGA;;;;;;;AAOA;;;;AAMA;AACA;;;;;AAOA;AACA;AACA;;;AAKA;;;AAMA;AACA;;;;;;AAMA;;;;;;;;;;;;;;AC/CA;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;AAQA;AACA;;;;;;;;;;;;AAcA;;;;;;;AAOA;;AAEA;AAGA;;;;AAIA;;;;;AAOA;;;;;;;;;;;AAWA;;AAIA;;;AAGA;;AAEA;;AAIA;;;;;;;;;;AAUA;;AC9GA;AACA;;AAEA;AAGA;;AAKA;AAEA;AAIA;;AAGA;AAIA;AACA","sources":["webpack://totamjung/./src/components/OptionsHeader/TotamjungInfoModal/TotamjungInfoModal.styled.ts","webpack://totamjung/./src/components/common/IconButton/IconButton.styled.ts","webpack://totamjung/./src/components/common/Modal/Modal.styled.ts","webpack://totamjung/./src/components/common/Text/Text.styled.ts"],"sourcesContent":["import { styled, keyframes } from 'styled-components';\n\nconst blink = keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 13px;\n\n  width: 310px;\n  max-width: 100%;\n  height: 420px;\n\n  & > * {\n    z-index: 1;\n  }\n`;\n\nexport const DarkBrownGradientElement = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 200px;\n\n  background: ${({ theme }) => theme.gradient.BROWN_GRADIENT};\n\n  z-index: 0;\n`;\n\nexport const IntroductoryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 8px;\n`;\n\nexport const LogoSquareImage = styled.img`\n  width: 160px;\n`;\n\nexport const ContentTitle = styled.span`\n  font-size: 30px;\n  font-family: 'Do Hyeon';\n  color: ${({ theme }) => theme.color.GOLD};\n`;\n\nexport const IntroductoryTextContainer = styled.div`\n  position: relative;\n\n  text-align: center;\n`;\n\nexport const TypewriterText = styled.span`\n  margin: 0 2px;\n\n  color: ${({ theme }) => theme.color.LEMON};\n`;\n\nexport const Pointer = styled.span`\n  display: inline-block;\n\n  width: 1.5px;\n  height: 18px;\n  margin: -3px 0 -3px 1px;\n\n  background-color: ${({ theme }) => theme.color.LEMON};\n\n  animation: ${blink} 0.8s infinite forwards;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 4px;\n\n  margin-top: auto;\n`;\n\nexport const LightGrayText = styled.span`\n  color: ${({ theme }) => theme.color.LIGHT_GRAY};\n`;\n\nexport const ControlButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 8px;\n\n  width: 220px;\n  margin: 0 auto;\n`;\n","import { styled } from 'styled-components';\n\nexport const Button = styled.button<{\n  $size: 'large' | 'medium';\n  $width?: string;\n  $color: string;\n}>`\n  display: flex;\n  overflow: hidden;\n  column-gap: 4px;\n  align-items: center;\n  justify-content: space-between;\n\n  width: ${({ $width }) => ($width ? $width : 'auto')};\n  height: ${({ $size }) => ($size === 'large' ? '40px' : '32px')};\n  padding: ${({ $size }) => ($size === 'large' ? '4px 6px' : '2px 4px')};\n\n  border: ${({ $size, $color }) =>\n    $size === 'large' ? `3px solid ${$color}` : `2px solid ${$color}`};\n  border-radius: ${({ $size }) => ($size === 'large' ? '6px' : '4px')};\n  background-color: transparent;\n\n  color: ${({ $color }) => $color};\n\n  &:disabled {\n    opacity: 0.6;\n  }\n\n  &:not([disabled]):hover {\n    box-shadow: 0 0 10px ${({ $color }) => $color};\n  }\n\n  transition: 0.2s;\n`;\n\nexport const Text = styled.span<{ $size: 'large' | 'medium'; $color: string }>`\n  font-size: ${({ $size }) => ($size === 'large' ? '20px' : '16px')};\n  font-weight: 600;\n  text-align: center;\n  flex-grow: 1;\n  white-space: nowrap;\n`;\n\nexport const IconImage = styled.img<{ $size: 'large' | 'medium' }>`\n  width: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n  height: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n\n  object-fit: contain;\n`;\n\nexport const IconWrapper = styled.div<{\n  $size: 'large' | 'medium';\n  $color: string;\n}>`\n  flex-shrink: 0;\n\n  width: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n  height: ${({ $size }) => ($size === 'large' ? '30px' : '24px')};\n\n  & > svg {\n    width: 100%;\n    height: 100%;\n\n    color: ${({ $color }) => $color};\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  z-index: 1;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  backdrop-filter: blur(5px);\n  animation: fadeIn 0.2s forwards;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  max-width: 100%;\n  max-height: 100%;\n\n  box-shadow: 0 0 30px ${({ theme }) => theme.color.GOLD};\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  animation: zoomIn 0.2s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n\n  @keyframes zoomIn {\n    from {\n      transform: scale(0.7);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 12px;\n\n  height: 56px;\n  padding: 16px 16px 0 16px;\n  border-bottom: 16px solid ${({ theme }) => theme.color.DARK_BROWN};\n\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const Title = styled.p`\n  overflow: hidden;\n  flex-grow: 1;\n\n  color: ${({ theme }) => theme.color.GOLD};\n  font-size: 24px;\n  font-family: 'Do Hyeon', Pretendard;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const CloseButton = styled.button`\n  flex-shrink: 0;\n\n  width: 28px;\n  height: 28px;\n\n  background-color: transparent;\n\n  & > svg {\n    width: 100%;\n    height: 100%;\n    color: ${({ theme }) => theme.color.GOLD};\n  }\n`;\n\nexport const Body = styled.div`\n  padding: 16px;\n\n  background-color: ${({ theme }) => theme.color.BROWN};\n\n  color: ${({ theme }) => theme.color.WHITE};\n  font-size: 16px;\n`;\n\nexport const ModalActionButtonsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  column-gap: 6px;\n  overflow: hidden;\n\n  width: calc(100% + 32px);\n  padding: 16px;\n  margin: 16px -16px -16px -16px;\n\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n","import { styled, css } from 'styled-components';\n\nexport const Text = styled.p<{\n  $type: 'primary' | 'semiPrimary' | 'normal' | 'code';\n  $fontSize: '16px' | '14px' | '13px';\n  $textAlign: 'left' | 'center' | 'right';\n}>`\n  text-align: ${({ $textAlign }) => $textAlign};\n  font-size: ${({ $fontSize }) => $fontSize};\n\n  ${({ theme, $type }) => {\n    if ($type === 'primary') {\n      return css`\n        color: ${theme.color.GOLD};\n        font-weight: 600;\n      `;\n    }\n\n    if ($type === 'semiPrimary') {\n      return css`\n        color: ${theme.color.LEMON};\n      `;\n    }\n\n    if ($type === 'code') {\n      return css`\n        font-family: 'IBM Plex Mono', Consolas, Pretendard;\n        color: ${theme.color.WHITE};\n      `;\n    }\n\n    return css`\n      color: ${theme.color.WHITE};\n    `;\n  }}\n`;\n"],"names":[],"sourceRoot":""}