{"version":3,"file":"3707.01a7e4d1.iframe.bundle.js","mappings":";;;;;;AAQA;;AAIA;AACA;;;AAKA;;;;;;;;;;AAUA;;AAEA;AAGA;AACA;;;;;;;;AAUA;;;;;;;AAOA;;AAEA;;AAEA;;;;AAIA;;;;AAMA;AAGA;AACA;;AAIA;AACA;;;;AAIA;;AAEA;;;;;AC9EA;;;;ACMA;;;;;;;;;AASA;;AAEA;AAGA;;;AAGA;;;;AAMA;;;;;;;;;;;;AAYA;;;;;;;;ACjCA;;;ACRA;;;ACmCA;;;;;;;;AAQA;;;;;;;;AAQA;;AAQA;;AAIA;;;;AAIA;;;;;;;;ACnEA;;;;;;;;ACQA;AACA;;;;;AAOA;;AAIA;;;;AAIA;;;;;;;;;ACXA;;;;AAIA;;;AAiBA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;;;;;;;;;;;;;;;;;AC7CA;;;AAGA;AACA;;;;AAIA;;;AAKA;AACA;;;;;;;AAOA;AAGA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;;;AAKA;AACA;;;;;;;AAOA;AAGA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;;;AAKA;;;;;;;;;AASA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;AC3EA;;;;;;;;AAQA;AACA;;AAIA;AACA;;;;;;;;;;;AAWA;;;AAKA;AACA;;;AAKA;;;;;;;;;;AAUA;;AAIA;;;;AAMA;;;AAGA;AAGA;;AAEA;;;;;;;;;;;;;AChEA;;;;AAMA;;;;;AAOA;;AAEA;;;AAKA;;;;;AAKA;AAGA;;;;;AAKA;AAGA;;;;AAMA;;;AAKA;;;;;;AAQA;;;;;;;;;;;;AC5DA;;;;;;;;AAUA;;;;;;;;AAUA;;;;;;;;AAQA;;AAEA;;AAIA;;;;;;;AAOA;;;;;;ACtCA;AACA;;;;;AAKA;AACA;;AAEA;;AAIA;AAGA;;AAEA;;ACzBA;;;;AAIA;;AAEA;;AAEA;AACA;;;;;AAKA;;AAGA;;;;;;;;ACdA;AACA;;AAEA;;AAEA;;AAEA;AAGA;;;;;;;;;;;;AAYA;;;;;;;;AC1BA;AACA;;AAEA;AAGA;;AAKA;AAEA;AAIA;;AAGA;AAIA;AACA;;;;;;;ACzBA;AAGA;AACA;;AAEA;AAEA;;;;;AAKA;;AAIA;;;;;AAOA;AACA;;;;;;;ACxBA;AACA;;;AAGA;;AAEA;;AAEA;;;;;;;AAOA;;AAGA","sources":["webpack://totamjung/./src/components/RandomDefenseCreateMenu/AlgorithmSearchInput/AlgorithmSearchInput.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/AlgorithmSearchInput/MiniAlgorithmButton/index.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/AlgorithmSearchInput/MiniAlgorithmButton/MiniAlgorithmButton.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/DifficultyAdjustMenu.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierSlider/index.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierPresetButtonList/TierPresetButton/TierPresetButton.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierPresetButtonList/TierPresetButton/index.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierRange/TierRange.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/DifficultyAdjustMenu/TierSlider/TierSlider.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/RandomDefenseCapsuleButton/RandomDefenseCapsuleButton.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/RandomDefenseCreateButton/RandomDefenseCreateButton.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/RandomDefenseCreateMenu.styled.ts","webpack://totamjung/./src/components/RandomDefenseCreateMenu/SearchOperatorSelect/SearchOperatorSelect.styled.ts","webpack://totamjung/./src/components/common/ErrorText/ErrorText.styled.ts","webpack://totamjung/./src/components/common/Input/Input.styled.ts","webpack://totamjung/./src/components/common/NamedFrame/NamedFrame.styled.ts","webpack://totamjung/./src/components/common/Text/Text.styled.ts","webpack://totamjung/./src/components/common/TextLink/TextLink.styled.ts","webpack://totamjung/./src/components/common/Textarea/Textarea.styled.ts"],"sourcesContent":["import { styled, css } from 'styled-components';\n\nexport const Container = styled.div<{ $isOpen: boolean }>`\n  position: relative;\n\n  width: 446px;\n  height: 64px;\n\n  ${({ theme, $isOpen }) =>\n    $isOpen &&\n    css`\n      & > ul {\n        border-color: ${theme.color.LEMON};\n        box-shadow: 0 0 12px ${theme.color.GOLD}70;\n      }\n    `}\n`;\n\nconst panel = css`\n  display: flex;\n  overflow: auto;\n  align-content: flex-start;\n  flex-wrap: wrap;\n  gap: 2px;\n\n  width: 100%;\n  padding: 4px;\n\n  border: 1.5px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const InputPanel = styled.ul`\n  ${panel}\n\n  position: relative;\n\n  height: 64px;\n\n  z-index: 1;\n  cursor: text;\n`;\n\nexport const SearchInput = styled.input<{ $isOpen: boolean }>`\n  position: relative;\n\n  width: 150px;\n  height: 26px;\n  padding: 0 4px;\n\n  border: 1px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  color: ${({ theme }) => theme.color.WHITE};\n\n  transition: outline 0.05s;\n\n  ${({ $isOpen }) =>\n    !$isOpen &&\n    css`\n      opacity: 0;\n    `}\n\n  ${({ theme, $isOpen }) =>\n    $isOpen &&\n    css`\n      border-color: ${theme.color.LEMON};\n      outline: 3px solid ${theme.color.LEMON}70;\n    `}\n`;\n\nexport const SearchResultPanel = styled.ul<{ $isOpen: boolean }>`\n  ${panel}\n\n  position: absolute;\n\n  height: ${({ $isOpen }) => ($isOpen ? '90px' : '64px')};\n\n  transform: ${({ $isOpen }) =>\n    $isOpen ? 'translateY(0)' : 'translateY(-64px)'};\n\n  font-size: 13px;\n\n  transition: 0.3s;\n`;\n","import MiniAlgorithmButton from './MiniAlgorithmButton';\n\nexport default MiniAlgorithmButton;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.li`\n  display: inline-block;\n\n  height: 26px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  max-width: 100%;\n  height: 100%;\n\n  padding: 0 6px;\n\n  border: 1px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const Text = styled.p`\n  overflow: hidden;\n\n  color: ${({ theme }) => theme.color.LEMON};\n  font-size: 13px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const CloseIconWrapper = styled.div`\n  flex-shrink: 0;\n\n  width: 20px;\n  height: 20px;\n\n  margin-right: -6px;\n\n  & svg {\n    width: 100%;\n    height: 100%;\n\n    color: ${({ theme }) => theme.color.LEMON};\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n\n  width: 465px;\n`;\n\nexport const PresetPanel = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n","import TierSlider from './TierSlider';\n\nexport default TierSlider;\n","import { styled } from 'styled-components';\nimport { Theme } from '~styles/theme';\nimport type { Rank } from '~types/randomDefense';\n\nconst getRankColor = (theme: Theme, rank: Rank) => {\n  if (rank === 'bronze') {\n    return theme.solvedAcTier.BRONZE;\n  }\n\n  if (rank === 'silver') {\n    return theme.solvedAcTier.SILVER;\n  }\n\n  if (rank === 'gold') {\n    return theme.solvedAcTier.GOLD;\n  }\n\n  if (rank === 'platinum') {\n    return theme.solvedAcTier.PLATINUM;\n  }\n\n  if (rank === 'diamond') {\n    return theme.solvedAcTier.DIAMOND;\n  }\n\n  if (rank === 'ruby') {\n    return theme.solvedAcTier.RUBY;\n  }\n\n  return theme.color.GRAY;\n};\n\nexport const Container = styled.li`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const Button = styled.button<{ $rank: Rank }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n\n  border: 1.5px solid ${({ theme, $rank }) => getRankColor(theme, $rank)};\n  border-radius: 4px;\n\n  background: transparent;\n\n  user-select: none;\n\n  &:hover {\n    background: ${({ theme, $rank }) =>\n      `linear-gradient(to top, ${getRankColor(\n        theme,\n        $rank,\n      )}70 0%, transparent 100%)`};\n  }\n`;\n\nexport const TierBadge = styled.img`\n  width: 16px;\n`;\n\nexport const Tilde = styled.div`\n  width: 16px;\n\n  font-size: 24px;\n  color: ${({ theme }) => theme.color.GOLD};\n  font-weight: 800;\n`;\n","import TierPresetButton from './TierPresetButton';\n\nexport default TierPresetButton;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  width: 120px;\n  height: 50px;\n\n  border: 1.5px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  background-color: ${({ theme }) => theme.color.BROWN};\n\n  border-radius: 6px;\n\n  user-select: none;\n`;\n\nexport const TierBadge = styled.img`\n  width: 26px;\n`;\n\nexport const Tilde = styled.div`\n  width: 16px;\n\n  font-size: 24px;\n  color: ${({ theme }) => theme.color.GOLD};\n  font-weight: 800;\n`;\n","import { styled } from 'styled-components';\nimport { TierWithoutNotRatable } from '~types/randomDefense';\nimport { isTierWithoutNotRatable } from '~types/typeGuards';\n\nconst TIER_COUNT = 31;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  width: 465px;\n  height: 15px;\n`;\n\nexport const Track = styled.div`\n  width: 100%;\n  height: 3px;\n\n  background: ${({ theme }) =>\n    `linear-gradient(to right, ${Array.from({ length: TIER_COUNT })\n      .map((_, index) => {\n        if (!isTierWithoutNotRatable(index)) {\n          return '';\n        }\n\n        return `${theme.solvedAcTier[index]} ${(index / TIER_COUNT) * 100}%, ${\n          theme.solvedAcTier[index]\n        } ${((index + 1) / TIER_COUNT) * 100}%, `;\n      })\n      .join('')\n      .slice(0, -2)})`};\n\n  pointer-events: none;\n`;\n\nexport const Thumb = styled.input<{ value: TierWithoutNotRatable }>`\n  position: absolute;\n  -webkit-appearance: none;\n  appearance: none;\n\n  width: 100%;\n  background-color: transparent;\n\n  pointer-events: none;\n\n  &::-webkit-slider-runnable-track {\n    -webkit-appearance: none;\n    appearance: none;\n  }\n\n  &::-webkit-slider-thumb {\n    height: 15px;\n    width: 15px;\n\n    border-radius: 7.5px;\n    background-color: ${({ theme, value }) => theme.solvedAcTier[value]};\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.color.TRANSPARENT_FAINT_WHITE}\n      inset;\n\n    -webkit-appearance: none;\n    appearance: none;\n\n    pointer-events: auto;\n  }\n\n  cursor: pointer;\n`;\n","import { styled, css } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  position: relative;\n\n  width: 180px;\n  height: 50px;\n\n  user-select: none;\n`;\n\nconst capsuleButton = css`\n  width: 50%;\n\n  border: 1.5px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  font-size: 16px;\n  font-weight: 800;\n  color: ${({ theme }) => theme.color.LIGHTER_BROWN};\n\n  transition: 0.2s;\n`;\n\nexport const LeftButton = styled.button<{ $isActivated: boolean }>`\n  ${capsuleButton}\n\n  border-radius: 25px 0 0 25px;\n  padding-left: 10px;\n\n  text-align: left;\n\n  ${({ $isActivated }) =>\n    $isActivated\n      ? css`\n          border-color: ${({ theme }) => theme.color.MAGENTA};\n          background-color: ${({ theme }) => theme.color.MAGENTA};\n          box-shadow: 0 0 12px ${({ theme }) => theme.color.MAGENTA};\n\n          color: ${({ theme }) => theme.color.WHITE};\n        `\n      : css`\n          &:hover {\n            border-color: ${({ theme }) => theme.color.MAGENTA};\n            box-shadow: 0 0 12px ${({ theme }) => theme.color.MAGENTA};\n\n            color: ${({ theme }) => theme.color.MAGENTA};\n          }\n        `}\n`;\n\nexport const RightButton = styled.button<{ $isActivated: boolean }>`\n  ${capsuleButton}\n\n  border-radius: 0 25px 25px 0;\n  padding-right: 10px;\n\n  text-align: right;\n\n  ${({ $isActivated }) =>\n    $isActivated\n      ? css`\n          border-color: ${({ theme }) => theme.color.AZURE_BLUE};\n          background-color: ${({ theme }) => theme.color.AZURE_BLUE};\n          box-shadow: 0 0 12px ${({ theme }) => theme.color.AZURE_BLUE};\n\n          color: ${({ theme }) => theme.color.WHITE};\n        `\n      : css`\n          &:hover {\n            border-color: ${({ theme }) => theme.color.AZURE_BLUE};\n            box-shadow: 0 0 12px ${({ theme }) => theme.color.AZURE_BLUE};\n\n            color: ${({ theme }) => theme.color.AZURE_BLUE};\n          }\n        `}\n`;\n\nexport const MidCircle = styled.span`\n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  width: 32px;\n  height: 32px;\n\n  border: 1.5px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  color: ${({ theme }) => theme.color.LIGHTER_BROWN};\n  font-size: 12px;\n  font-weight: 800;\n  text-align: center;\n  line-height: 29px;\n\n  transform: translate(-50%, -50%);\n`;\n","import { styled, css } from 'styled-components';\n\nexport const Button = styled.button`\n  position: relative;\n\n  width: 126px;\n  height: 60px;\n\n  background: none;\n\n  user-select: none;\n\n  &:disabled {\n    opacity: 0.6;\n  }\n`;\n\nconst buttonSide = css`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n\n  width: 126px;\n  height: 50px;\n\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n  border: 2px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 6px;\n`;\n\nexport const UpperSide = styled.div`\n  ${buttonSide}\n\n  display: flex;\n  align-items: center;\n\n  padding: 4px;\n\n  transition: 0.15s;\n  transform: translateY(-10px);\n  z-index: 1;\n\n  ${Button}:not([disabled]):active > & {\n    transform: translateY(-4px);\n  }\n`;\n\nexport const LowerSide = styled.div`\n  ${buttonSide}\n\n  bottom: 0;\n`;\n\nexport const DiceIconWrapper = styled.div`\n  flex-shrink: 0;\n\n  width: 36px;\n  height: 36px;\n\n  & svg {\n    width: 36px;\n    height: 36px;\n\n    color: ${({ theme }) => theme.color.DARK_ORANGE};\n  }\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`;\n\nexport const TitleText = styled.p`\n  font-size: 20px;\n  font-family: 'Do Hyeon', Pretendard;\n  color: ${({ theme }) => theme.color.ORANGE};\n`;\n\nexport const SlotNoText = styled.p`\n  font-size: 12px;\n  color: ${({ theme }) => theme.color.LIGHT_GRAY};\n`;\n","import { styled } from 'styled-components';\nimport type { CSSProperties } from 'react';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  row-gap: 12px;\n  position: relative;\n\n  width: 100%;\n  height: 100%;\n  padding-top: 6px;\n\n  z-index: 1;\n`;\n\nexport const ErrorTextWrapper = styled.div`\n  position: absolute;\n  top: -32px;\n  right: 0;\n`;\n\nexport const RandomDefenseCapsuleButtonWrapper = styled.div`\n  display: flex;\n  position: absolute;\n  top: 26px;\n  right: 0;\n`;\n\nexport const Row = styled.div<{ $columnGap?: CSSProperties['width'] }>`\n  display: flex;\n  column-gap: ${({ $columnGap }) => ($columnGap ? $columnGap : 0)};\n\n  width: 100%;\n`;\n\nexport const Label = styled.label<{ $width: CSSProperties['width'] }>`\n  display: inline-flex;\n  flex-direction: column;\n  row-gap: 4px;\n\n  width: ${({ $width }) => $width};\n`;\n\nexport const PanelContainer = styled.div<{ $width: CSSProperties['width'] }>`\n  display: inline-flex;\n  flex-direction: column;\n  row-gap: 4px;\n\n  width: ${({ $width }) => $width};\n`;\n\nexport const SolvedRangeInputsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 8px;\n`;\n\nexport const DifficultyAdjustMenuWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const InformationTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n\n  width: 495px;\n`;\n\nexport const RandomDefenseCreateButtonWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n`;\n","import { styled, keyframes } from 'styled-components';\n\nexport const Container = styled.ul`\n  display: flex;\n  justify-content: space-between;\n\n  width: 180px;\n  height: 18px;\n\n  user-select: none;\n`;\n\nexport const ButtonContainer = styled.li`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n  column-gap: 2px;\n\n  width: 52px;\n  height: 18px;\n`;\n\nconst zoomInOut = keyframes`\n  from {\n    transform: scale(0.5);\n  }\n  \n  to {\n    transform: scale(1);\n  }\n`;\n\nexport const CheckIconWrapper = styled.div`\n  width: 16px;\n  height: 16px;\n\n  & svg {\n    width: 16px;\n    height: 16px;\n\n    color: ${({ theme }) => theme.color.GOLD};\n\n    animation: ${zoomInOut} 0.15s forwards;\n  }\n`;\n\nexport const Button = styled.button<{ $isSelected: boolean }>`\n  width: auto;\n  height: 18px;\n  background: transparent;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme, $isSelected }) =>\n    $isSelected ? theme.color.GOLD : theme.color.LIGHT_GRAY};\n`;\n","import { styled } from 'styled-components';\nimport type { CSSProperties } from 'styled-components';\n\nconst getContainerSizeByFontSize = (fontSize: '16px' | '14px' | '13px') => {\n  return `${Number(fontSize.slice(0, 2)) + 3}px`;\n};\n\nexport const Container = styled.div<{\n  $fontSize: '16px' | '14px' | '13px';\n  $height?: CSSProperties['height'];\n}>`\n  display: flex;\n  column-gap: 4px;\n\n  width: 100%;\n  min-height: ${({ $fontSize }) => getContainerSizeByFontSize($fontSize)};\n  height: ${({ $height }) => ($height === undefined ? 'auto' : $height)};\n\n  & > svg {\n    flex-shrink: 0;\n\n    width: ${({ $fontSize }) => getContainerSizeByFontSize($fontSize)};\n    height: ${({ $fontSize }) => getContainerSizeByFontSize($fontSize)};\n\n    color: ${({ theme }) => theme.color.LIGHT_RED};\n  }\n`;\n\nexport const ErrorText = styled.p<{\n  $fontSize: '16px' | '14px' | '13px';\n}>`\n  font-size: ${({ $fontSize }) => $fontSize};\n\n  color: ${({ theme }) => theme.color.LIGHT_RED};\n`;\n","import { styled } from 'styled-components';\nimport type { CSSProperties } from 'styled-components';\n\nexport const Input = styled.input<{\n  $width: CSSProperties['width'];\n  $hasError: boolean;\n  $textAlign: 'left' | 'center';\n}>`\n  width: ${({ $width }) => $width};\n  height: 30px;\n  padding: 0 6px;\n\n  border: 1.5px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  color: ${({ theme }) => theme.color.WHITE};\n  text-align: ${({ $textAlign }) => $textAlign};\n  font-size: 13px;\n\n  &:focus,\n  &:active {\n    border-color: ${({ theme, $hasError }) =>\n      $hasError ? theme.color.RED : theme.color.LEMON};\n    outline: 3px solid\n      ${({ theme, $hasError }) =>\n        $hasError ? theme.color.RED : theme.color.LEMON}70;\n  }\n\n  transition: outline 0.05s;\n`;\n","import { styled } from 'styled-components';\nimport type { CSSProperties } from 'styled-components';\n\nexport const Container = styled.div<{\n  $width: CSSProperties['width'];\n  $height: CSSProperties['height'];\n  $padding: CSSProperties['padding'];\n}>`\n  display: inline-block;\n  position: relative;\n\n  width: ${({ $width }) => $width};\n  height: ${({ $height }) => $height};\n\n  padding: ${({ $padding }) => $padding};\n\n  border: 2px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 6px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n`;\n\nexport const Title = styled.div`\n  display: inline-block;\n  overflow: hidden;\n  position: absolute;\n  top: -2px;\n  right: -2px;\n\n  max-width: 80%;\n  height: 26px;\n\n  padding: 0 8px 0 8px;\n  border-radius: 0 6px 0 6px;\n  background-color: ${({ theme }) => theme.color.LIGHTER_BROWN};\n\n  font-size: 14px;\n  font-weight: 800;\n  line-height: 26px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n","import { styled, css } from 'styled-components';\n\nexport const Text = styled.p<{\n  $type: 'primary' | 'semiPrimary' | 'normal' | 'code';\n  $fontSize: '16px' | '14px' | '13px';\n  $textAlign: 'left' | 'center' | 'right';\n}>`\n  text-align: ${({ $textAlign }) => $textAlign};\n  font-size: ${({ $fontSize }) => $fontSize};\n\n  ${({ theme, $type }) => {\n    if ($type === 'primary') {\n      return css`\n        color: ${theme.color.GOLD};\n        font-weight: 600;\n      `;\n    }\n\n    if ($type === 'semiPrimary') {\n      return css`\n        color: ${theme.color.LEMON};\n      `;\n    }\n\n    if ($type === 'code') {\n      return css`\n        font-family: 'IBM Plex Mono', Consolas, Pretendard;\n        color: ${theme.color.WHITE};\n      `;\n    }\n\n    return css`\n      color: ${theme.color.WHITE};\n    `;\n  }}\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.a`\n  display: inline-flex;\n  align-items: center;\n  column-gap: 2px;\n\n  color: ${({ theme }) => theme.color.LEMON};\n`;\n\nexport const TextLink = styled.span<{ $fontSize: '16px' | '14px' | '13px' }>`\n  font-size: ${({ $fontSize }) => $fontSize};\n  text-decoration: underline 2px dotted;\n  -webkit-text-decoration-color: ${({ theme }) =>\n    theme.color.TRANSPARENT_LEMON};\n  text-decoration-color: ${({ theme }) => theme.color.TRANSPARENT_LEMON};\n  text-underline-offset: 2px;\n\n  &:hover {\n    text-decoration: underline 2px dotted;\n    text-decoration-color: ${({ theme }) => theme.color.LEMON};\n  }\n`;\n\nexport const LinkIconWrapper = styled.span<{\n  $fontSize: '16px' | '14px' | '13px';\n}>`\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n\n  width: ${({ $fontSize }) => $fontSize};\n  height: ${({ $fontSize }) => $fontSize};\n\n  & > svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import { styled } from 'styled-components';\nimport type { CSSProperties } from 'styled-components';\n\nexport const Textarea = styled.textarea<{\n  $width: CSSProperties['width'];\n  $height: CSSProperties['height'];\n  $hasError: boolean;\n}>`\n  width: ${({ $width }) => $width};\n  height: ${({ $height }) => $height};\n  padding: 6px;\n\n  border: 1.5px solid ${({ theme }) => theme.color.LIGHTER_BROWN};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.DARK_BROWN};\n\n  color: ${({ theme }) => theme.color.WHITE};\n  font-size: 13px;\n\n  resize: none;\n\n  &:focus,\n  &:active {\n    border-color: ${({ theme, $hasError }) =>\n      $hasError ? theme.color.RED : theme.color.LEMON};\n    outline: 3px solid\n      ${({ theme, $hasError }) =>\n        $hasError ? theme.color.RED : theme.color.LEMON}70;\n  }\n\n  transition: outline 0.05s;\n`;\n"],"names":[],"sourceRoot":""}